{"ast":null,"code":"class ChallengesApiClient {\n  static challenge() {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_CHALLENGE);\n  }\n  static sendGuess(user, a, b, guess) {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.POST_RESULT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        userAlias: user,\n        factorA: a,\n        factorB: b,\n        guess: guess\n      })\n    });\n  }\n  static getAttempts(userAlias) {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n  }\n  static getUsers(userIds) {\n    return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_USERS_BY_IDS + '/' + userIds.join(','));\n  }\n}\nChallengesApiClient.SERVER_URL = 'http://localhost:8000';\nChallengesApiClient.GET_CHALLENGE = '/challenges/random';\nChallengesApiClient.POST_RESULT = '/attempts';\nChallengesApiClient.GET_ATTEMPTS_BY_ALIAS = '/attempts?alias=';\nChallengesApiClient.GET_USERS_BY_IDS = '/users';\nexport default ChallengesApiClient;","map":{"version":3,"names":["ChallengesApiClient","challenge","fetch","SERVER_URL","GET_CHALLENGE","sendGuess","user","a","b","guess","POST_RESULT","method","headers","body","JSON","stringify","userAlias","factorA","factorB","getAttempts","GET_ATTEMPTS_BY_ALIAS","getUsers","userIds","GET_USERS_BY_IDS","join"],"sources":["/Users/hariharan.thavachelvam/Documents/Sandbox/workspace/My Learning/Chapter-08b/challenges-frontend/src/services/ChallengesApiClient.js"],"sourcesContent":["class ChallengesApiClient {\n\n    static SERVER_URL = 'http://localhost:8000';\n    static GET_CHALLENGE = '/challenges/random';\n    static POST_RESULT = '/attempts';\n    static GET_ATTEMPTS_BY_ALIAS = '/attempts?alias='\n    static GET_USERS_BY_IDS = '/users'\n\n    static challenge(): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_CHALLENGE);\n    }\n\n    static sendGuess(user: string,\n                     a: number,\n                     b: number,\n                     guess: number): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.POST_RESULT,\n            {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(\n                    {\n                        userAlias: user,\n                        factorA: a,\n                        factorB: b,\n                        guess: guess\n                    }\n                )\n            });\n    }\n\n    static getAttempts(userAlias: string): Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_ATTEMPTS_BY_ALIAS + userAlias);\n    }\n\n    static getUsers(userIds: number[]) : Promise<Response> {\n        return fetch(ChallengesApiClient.SERVER_URL + ChallengesApiClient.GET_USERS_BY_IDS + '/' + userIds.join(','))\n    }\n}\n\nexport default ChallengesApiClient;"],"mappings":"AAAA,MAAMA,mBAAmB,CAAC;EAQtB,OAAOC,SAASA,CAAA,EAAsB;IAClC,OAAOC,KAAK,CAACF,mBAAmB,CAACG,UAAU,GAAGH,mBAAmB,CAACI,aAAa,CAAC;EACpF;EAEA,OAAOC,SAASA,CAACC,IAAY,EACZC,CAAS,EACTC,CAAS,EACTC,KAAa,EAAqB;IAC/C,OAAOP,KAAK,CAACF,mBAAmB,CAACG,UAAU,GAAGH,mBAAmB,CAACU,WAAW,EACzE;MACIC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAChB;QACIC,SAAS,EAAEV,IAAI;QACfW,OAAO,EAAEV,CAAC;QACVW,OAAO,EAAEV,CAAC;QACVC,KAAK,EAAEA;MACX,CACJ;IACJ,CAAC,CAAC;EACV;EAEA,OAAOU,WAAWA,CAACH,SAAiB,EAAqB;IACrD,OAAOd,KAAK,CAACF,mBAAmB,CAACG,UAAU,GAAGH,mBAAmB,CAACoB,qBAAqB,GAAGJ,SAAS,CAAC;EACxG;EAEA,OAAOK,QAAQA,CAACC,OAAiB,EAAsB;IACnD,OAAOpB,KAAK,CAACF,mBAAmB,CAACG,UAAU,GAAGH,mBAAmB,CAACuB,gBAAgB,GAAG,GAAG,GAAGD,OAAO,CAACE,IAAI,CAAC,GAAG,CAAC,CAAC;EACjH;AACJ;AAxCMxB,mBAAmB,CAEdG,UAAU,GAAG,uBAAuB;AAFzCH,mBAAmB,CAGdI,aAAa,GAAG,oBAAoB;AAHzCJ,mBAAmB,CAIdU,WAAW,GAAG,WAAW;AAJ9BV,mBAAmB,CAKdoB,qBAAqB,GAAG,kBAAkB;AAL/CpB,mBAAmB,CAMduB,gBAAgB,GAAG,QAAQ;AAoCtC,eAAevB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}